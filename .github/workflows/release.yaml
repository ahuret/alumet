name: "Create the release"

on:
  release:
    types: ["created", "published", "prereleased"]
  workflow_dispatch:

jobs:
  gather-informations:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.TAG }}
    steps:
      - name: Get Release Tag
        id: get_tag
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          CLEAN_TAG=${TAG_NAME#v}
          echo "TAG=$CLEAN_TAG" >> $GITHUB_OUTPUT

  create-rpm:
    needs: gather-informations
    uses: alumet-dev/packaging/.github/workflows/build_rpm.yaml@ci/create-rpm-package
    with:
      target-architecture: x86_64
      build-version: ${{ needs.gather-informations.outputs.tag }}
      release-version: 1

  test-rpm:
    needs: ["gather-informations", "create-rpm"]
    runs-on: ubuntu-latest
    container:
      image: "registry.access.redhat.com/ubi8/ubi:8.3"
      options: --cap-add=SYS_NICE --cap-add=PERFMON

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download RPM artifact
        id: download_rpm
        uses: actions/download-artifact@v4
        with:
          pattern: '**/*8.3*.rpm'
          path: ./rpm
          merge-multiple: true

      - name: Install RPMs
        run: |
          rpm -i ${{ steps.download_rpm.outputs.download-path }}/*.rpm

      - name: Install Goss
        run: |
          curl -fsSL https://goss.rocks/install | sh
          
      - name: Run Goss tests
        continue-on-error: true
        run: |
          goss -g .github/goss_validate.yaml validate --format documentation > goss-results.txt
          cat goss-results.txt >> $GITHUB_STEP_SUMMARY
          
      - name: Upload artifact local agent
        uses: actions/upload-artifact@v4
        with:
          name: report_goss.txt
          path: |
            ./goss-results.txt
      
  attach-artifacts:
    needs:
      - gather-informations
      - test-rpm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download RPM artifact
        uses: actions/download-artifact@v4
        with:
          pattern: '**/*.rpm'
          path: ./rpm

      - name: Release
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            rpm/**/*.rpm

      - name: Get Latest Release and Delete Old Artifacts
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: get_latest_release_and_delete_old_artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            let id = latestRelease.data.id;
            let tag = latestRelease.data.tag_name;

            const assets = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: id
            });

            for (const asset of assets.data) {
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              });
            }
            console.log(`Release id: ${id}`);
            console.log(`Release tag: ${tag}`);
            core.setOutput("release_id", id);
            core.setOutput("release_tag", tag);

      - name: Upload New Artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          find rpm -type f -exec gh release upload ${{ steps.get_latest_release_and_delete_old_artifacts.outputs.release_tag }} {} \;
